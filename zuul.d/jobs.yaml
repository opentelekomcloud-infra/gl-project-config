# Zuul tenant configuration for the gl tenant
#
- job:
    name: base
    parent: null
    abstract: true
    description: |
      The base job for GL tenant of zuul.otc-service.com.
      All jobs ultimately inherit from this.  It runs a pre-playbook
      which copies all of the job's prepared git repos on to all of
      the nodes in the nodeset.  It runs a post-playbook which copies
      all of the files in the logs/ subdirectory of the executor
      work directory to the logserver.
      It also sets default timeout and nodeset values (which may be
      overidden).

      Responds to these variables:

      .. zuul:jobvar:: base_serial
         :default: Omitted

         This sets the serial keyword in the pre and post playbooks
         which can be an integer or percentage.

         See ansible documentation for more information:
         http://docs.ansible.com/ansible/latest/playbooks_delegation.html
    pre-run: playbooks/base/pre.yaml
    post-run:
      - playbooks/base/post.yaml
      - playbooks/base/post-logs.yaml
    roles:
      - zuul: zuul/zuul-jobs
      - zuul: opentelekomcloud-infra/otc-zuul-jobs
    timeout: 1800
    post-timeout: 1800
    nodeset: centos-8
    vars:
      job_logs_container_name: zuul_gl_logs
    extra-vars:
      zuul_use_fetch_output: true
    secrets:
      - otc_gl_cloud_logs

- job:
    name: promote-otc-tox-docs
    parent: otc-promote-docs-base
    description: |
      Promote content from otc-tox-docs job for projects that
      run tox using the docs environment following Open Telekom Cloud PTI.
      Publish the results of the docs tox job to
      SWIFT/{{ zuul.project.short_name }}.
      Publishes depending on branch to latest/ (for master).
      This is the promote job for ``otc-tox-docs``.
    final: true
    vars:
      download_artifact_job: "otc-tox-docs"
      prefix: ""
      make_public: false
    secrets:
      - secret: otc_cloud_docs_int
        name: cloud_docs
        pass-to-parent: true

- job:
    name: check-approvals
    parent: null
    description: |
      Verify PR/MR approvals of the project.
      It returns list of groups that left their approvals (approval of a group
      member is considered as a group approval).
    nodeset:
      nodes: []
    provides:
      - approvals
    run:
      - playbooks/approvals/gl.yaml
    secrets:
      - otc_gl_api

- job:
    name: require-approval-by-group
    parent: null
    description: |
      Verifies the PR/MR has approval by specific group member.
      Required group name must be passed as `required_group` variable.
    nodeset:
      nodes: []
    requires:
      - approvals
    run:
      - playbooks/approvals/check_group.yaml
